function Grid.new 3
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 16
pop this 1
push constant 32
pop this 2
push constant 16
pop this 3
push this 1
call Array.new 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push this 2
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 2
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 2
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Grid.sumColOfThree 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push local 1
return
function Grid.computeSuccessor 6
push argument 0
pop pointer 0
push this 2
call Array.new 1
pop local 0
push constant 0
pop local 5
push pointer 0
push argument 1
push this 1
push constant 1
sub
call Grid.sumColOfThree 3
pop local 2
push pointer 0
push argument 1
push constant 0
call Grid.sumColOfThree 3
pop local 3
push local 2
push local 3
add
pop local 1
label WHILE_EXP0
push local 5
push this 2
lt
not
if-goto WHILE_END0
push pointer 0
push argument 1
push local 5
push constant 1
add
call Grid.sumColOfThree 3
pop local 4
push local 1
push local 4
add
pop local 1
push local 1
push constant 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 5
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 1
push constant 4
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 5
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END1
label IF_FALSE1
push local 5
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END1
label IF_END0
push local 3
pop local 2
push local 4
pop local 3
push local 1
push local 2
sub
pop local 1
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Grid.update 4
push argument 0
pop pointer 0
push pointer 0
push constant 0
call Grid.computeSuccessor 2
pop local 1
push local 1
call Array.dispose 1
pop temp 0
push constant 0
return
function Grid.drawRectangle 5
push argument 0
pop pointer 0
push argument 1
push this 3
call Math.multiply 2
pop local 1
push argument 2
push this 3
call Math.multiply 2
pop local 2
push local 1
push this 3
add
push constant 1
sub
pop local 3
push local 2
push this 3
add
push constant 1
sub
pop local 4
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 2
push local 1
push local 4
push local 3
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Grid.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
